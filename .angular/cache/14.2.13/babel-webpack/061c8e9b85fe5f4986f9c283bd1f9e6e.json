{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    login(user, gethash = null) {\n      if (gethash != null) {\n        user.gethash = gethash;\n      }\n\n      const json = JSON.stringify(user);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(`${environment.apiUrl}/login`, json, {\n        headers: headers\n      });\n    }\n\n    register(user) {\n      const json = JSON.stringify(user);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(`${environment.apiUrl}/user`, json, {\n        headers: headers\n      });\n    }\n\n    update(user) {\n      const json = JSON.stringify(user);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.getToken()\n      });\n      return this.http.put(`${environment.apiUrl}/user/${user._id}`, json, {\n        headers: headers\n      });\n    }\n\n    getIdentity() {\n      let identity = localStorage.getItem('identity');\n\n      if (identity !== \"undefined\") {\n        this.identity = JSON.parse(identity);\n      } else {\n        this.identity = null;\n      }\n\n      return this.identity;\n    }\n\n    getToken() {\n      let token = localStorage.getItem('token');\n\n      if (token !== \"undefined\") {\n        this.token = token;\n      } else {\n        this.token = null;\n      }\n\n      return this.token;\n    }\n\n    isAdmin() {\n      return JSON.parse(localStorage.getItem('identity')).role === 'ROLE_ADMIN';\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}