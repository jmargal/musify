{"ast":null,"code":"import { Artist } from '../../models/artist';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/artist.service\";\nimport * as i3 from \"../../services/user.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction EditArtistComponent_div_0_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"The name can not be blank \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditArtistComponent_div_0_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"The description can not be blank \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditArtistComponent_div_0_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"img\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r3.url + \"/artist/image/\" + ctx_r3.artist.artist.image, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EditArtistComponent_div_0_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"img\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r4.url + \"/artist/image/IXc8_IwnlB4XBS7ASs1pX8bS.jpg\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EditArtistComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function EditArtistComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"p\")(6, \"label\");\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 4);\n    i0.ɵɵtemplate(9, EditArtistComponent_div_0_span_9_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\")(11, \"label\");\n    i0.ɵɵtext(12, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"textarea\", 6);\n    i0.ɵɵtemplate(14, EditArtistComponent_div_0_span_14_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\", 7)(16, \"label\");\n    i0.ɵɵtext(17, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function EditArtistComponent_div_0_Template_input_change_18_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.fileChangeEvent($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(19, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, EditArtistComponent_div_0_div_20_Template, 2, 1, \"div\", 10);\n    i0.ɵɵtemplate(21, EditArtistComponent_div_0_div_21_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.myForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.artist.artist.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isValidName());\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.artist.artist.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isValidDescription());\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.myForm.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.artist.artist.image);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.artist.artist.image);\n  }\n}\n\nexport let EditArtistComponent = /*#__PURE__*/(() => {\n  class EditArtistComponent {\n    constructor(route, svc, userSvc, formbuilder, router) {\n      this.route = route;\n      this.svc = svc;\n      this.userSvc = userSvc;\n      this.formbuilder = formbuilder;\n      this.router = router;\n      this.id = this.route.snapshot.params['id'];\n      this.url = environment.apiUrl;\n      this.myForm = this.formbuilder.group({\n        name: ['', [Validators.required, Validators.minLength(3)]],\n        description: ['', [Validators.required, Validators.min(5)]],\n        image: [null]\n      });\n    }\n\n    ngOnInit() {\n      this.token = this.userSvc.getToken();\n      this.svc.getArtist(this.token, this.id).subscribe({\n        next: resp => {\n          this.artist = resp;\n          this.title = \"Edit \" + this.artist.artist.name;\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n\n    isImageFile(file) {\n      var _a;\n\n      const allowedExtensions = ['jpg', 'jpeg', 'png'];\n      const fileExtension = (_a = file === null || file === void 0 ? void 0 : file.name.split('.').pop()) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n      return fileExtension !== undefined && allowedExtensions.includes(fileExtension);\n    }\n\n    fileChangeEvent(file) {\n      this.filesToUpload = file.target.files;\n    }\n\n    isValidName() {\n      var _a, _b;\n\n      return ((_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['name'].touched) && ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['name'].errors);\n    }\n\n    isValidDescription() {\n      var _a;\n\n      const descriptionControl = (_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['description'];\n      return (descriptionControl === null || descriptionControl === void 0 ? void 0 : descriptionControl.touched) && (descriptionControl.errors || descriptionControl.value && descriptionControl.value.trim() === '' && descriptionControl.value.includes('\\n'));\n    }\n\n    makeFileRequest(url, params, files) {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        const xhr = new XMLHttpRequest();\n\n        for (let i = 0; i < files.length; i++) {\n          formData.append('image', files[i], files[i].name);\n        }\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n              resolve(JSON.parse(xhr.responseText));\n            } else {\n              reject(xhr.response);\n            }\n          }\n        };\n\n        xhr.open('POST', url, true);\n        xhr.setRequestHeader('Authorization', this.token);\n        xhr.send(formData);\n      });\n    }\n\n    onSubmit() {\n      var _a, _b;\n\n      let name = (_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['name'].value;\n      let description = (_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['description'].value;\n      let img = this.filesToUpload[0];\n\n      if (img != null && !this.isImageFile(img)) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Invalid Image',\n          text: 'Please select a valid image file.'\n        });\n      } else {\n        const editArtist = new Artist(name, description, img);\n        this.svc.editArtist(this.token, this.id, editArtist).subscribe({\n          next: resp => {\n            if (this.filesToUpload != null) {\n              this.makeFileRequest(environment.apiUrl + '/artist/image/' + this.artist.artist._id, [], this.filesToUpload).then(result => {\n                this.artist.artist.image = result.image;\n              });\n            }\n\n            Swal.fire({\n              icon: 'success',\n              title: 'Updated!',\n              text: 'Artist updated successfully'\n            });\n            this.router.navigate(['list/1']);\n          },\n          error: err => {\n            console.log(err);\n            Swal.fire({\n              icon: 'error',\n              title: 'Ooops...',\n              text: 'It seems there was an error'\n            });\n          }\n        });\n      }\n    }\n\n  }\n\n  EditArtistComponent.ɵfac = function EditArtistComponent_Factory(t) {\n    return new (t || EditArtistComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ArtistService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  EditArtistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditArtistComponent,\n    selectors: [[\"app-edit-artist\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"formControlName\", \"description\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [1, \"form-group\"], [\"type\", \"file\", \"formControlName\", \"image\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"Send\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"col-md-5\", \"id\", \"artistImage\", 4, \"ngIf\"], [1, \"form-text\", \"text-danger\"], [\"id\", \"artistImage\", 1, \"col-md-5\"], [3, \"src\"]],\n    template: function EditArtistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EditArtistComponent_div_0_Template, 22, 9, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.artist);\n      }\n    },\n    dependencies: [i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"#artistImage[_ngcontent-%COMP%]{margin:1.2em}img[_ngcontent-%COMP%]{width:550px;height:520px;border-radius:40px}\"]\n  });\n  return EditArtistComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}