{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SongService = /*#__PURE__*/(() => {\n  class SongService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    addSong(token, song) {\n      const params = JSON.stringify(song);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.post(`${environment.apiUrl}/song`, params, {\n        headers: headers\n      });\n    }\n\n    editSong(token, song, id) {\n      const params = JSON.stringify(song);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.put(`${environment.apiUrl}/song/${id}`, params, {\n        headers: headers\n      });\n    }\n\n    getSong(token, id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.get(`${environment.apiUrl}/song/${id}`, {\n        headers: headers\n      });\n    }\n\n    getSongsOfAlbum(token, id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.get(`${environment.apiUrl}/songs/album/${id}`, {\n        headers: headers\n      });\n    }\n\n    getSongFile(id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      console.log(`${environment.apiUrl}/song/file/${id}`);\n      return this.http.get(`${environment.apiUrl}/song/file/${id}`, {\n        headers: headers\n      });\n    }\n\n  }\n\n  SongService.ɵfac = function SongService_Factory(t) {\n    return new (t || SongService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SongService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SongService,\n    factory: SongService.ɵfac,\n    providedIn: 'root'\n  });\n  return SongService;\n})();","map":null,"metadata":{},"sourceType":"module"}