{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ArtistService = /*#__PURE__*/(() => {\n  class ArtistService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    addArtist(token, artist) {\n      const params = JSON.stringify(artist);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.post(`${environment.apiUrl}/artist`, params, {\n        headers: headers\n      });\n    }\n\n    getArtists(token, page, number) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n\n      if (number) {\n        return this.http.get(`${environment.apiUrl}/artists/${page}/${number}`, {\n          headers: headers\n        });\n      } else {\n        return this.http.get(`${environment.apiUrl}/artists/${page}`, {\n          headers: headers\n        });\n      }\n    }\n\n    getArtist(token, id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.get(`${environment.apiUrl}/artist/${id}`, {\n        headers: headers\n      });\n    }\n\n    getArtistByName(token, name) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.get(`${environment.apiUrl}/artist/name/${name}`, {\n        headers: headers\n      });\n    }\n\n    editArtist(token, id, artist) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.put(`${environment.apiUrl}/artist/${id}`, artist, {\n        headers: headers\n      });\n    }\n\n    deleteArtist(token, id) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      });\n      return this.http.delete(`${environment.apiUrl}/artist/${id}`, {\n        headers: headers\n      });\n    }\n\n  }\n\n  ArtistService.ɵfac = function ArtistService_Factory(t) {\n    return new (t || ArtistService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ArtistService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArtistService,\n    factory: ArtistService.ɵfac,\n    providedIn: 'root'\n  });\n  return ArtistService;\n})();","map":null,"metadata":{},"sourceType":"module"}