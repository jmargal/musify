{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Song } from 'src/app/models/song';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"src/app/services/albums.service\";\nimport * as i5 from \"src/app/services/song.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction AddSongComponent_div_0_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"The name is not valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddSongComponent_div_0_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"The duration format must be like \\\"3:14\\\" \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddSongComponent_div_0_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"The number is not valid or already exists a song with this number in this album\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddSongComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function AddSongComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"h1\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\")(7, \"label\");\n    i0.ɵɵtext(8, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, AddSongComponent_div_0_span_10_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementStart(11, \"p\")(12, \"label\");\n    i0.ɵɵtext(13, \"Duration\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, AddSongComponent_div_0_span_15_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementStart(16, \"p\")(17, \"label\");\n    i0.ɵɵtext(18, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 8);\n    i0.ɵɵtemplate(20, AddSongComponent_div_0_span_20_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p\", 9)(22, \"label\");\n    i0.ɵɵtext(23, \"Audio file\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function AddSongComponent_div_0_Template_input_change_24_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.fileChangeEvent($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(25, \"input\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 12);\n    i0.ɵɵelement(27, \"img\", 13);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.myForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.album.title);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isValidName());\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isValidDuration());\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isValidNumber());\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.myForm.invalid);\n  }\n}\n\nexport let AddSongComponent = /*#__PURE__*/(() => {\n  class AddSongComponent {\n    constructor(route, formbuilder, userSvc, albumSvc, router, songSvc) {\n      this.route = route;\n      this.formbuilder = formbuilder;\n      this.userSvc = userSvc;\n      this.albumSvc = albumSvc;\n      this.router = router;\n      this.songSvc = songSvc;\n      this.idAlbum = this.route.snapshot.params['album'];\n      this.charged = false;\n    }\n\n    ngOnInit() {\n      this.token = this.userSvc.getToken();\n      this.getAlbum();\n      this.getNumbersOfSongs();\n      this.myForm = this.formbuilder.group({\n        name: ['', Validators.required],\n        duration: ['', [Validators.required, Validators.pattern(/^\\d+:\\d+$/)]],\n        number: ['', [Validators.required, Validators.min(1), Validators.max(99)]]\n      });\n    }\n\n    getAlbum() {\n      this.albumSvc.getAlbum(this.token, this.idAlbum).subscribe({\n        next: album => {\n          this.album = album;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n\n    getNumbersOfSongs() {\n      this.songSvc.getSongsOfAlbum(this.token, this.idAlbum).subscribe({\n        next: resp => {\n          this.numberOfAlbums = resp.songs.map(song => song.number);\n          this.charged = true;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n\n    isValidDuration() {\n      var _a, _b;\n\n      return ((_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['duration'].touched) && ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['duration'].errors);\n    }\n\n    isValidName() {\n      var _a, _b;\n\n      return ((_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['name'].touched) && ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['name'].errors);\n    }\n\n    isValidNumber() {\n      var _a, _b, _c;\n\n      const numberControl = this.myForm.get('number').value;\n      let numberExists = false;\n\n      if (this.numberOfAlbums.includes(numberControl)) {\n        numberExists = true;\n        (_a = this.myForm) === null || _a === void 0 ? void 0 : _a.setErrors({\n          'error': true\n        });\n      }\n\n      return ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['number'].touched) && (((_c = this.myForm) === null || _c === void 0 ? void 0 : _c.controls['number'].errors) || numberExists);\n    }\n\n    isAudioFile() {\n      var _a, _b;\n\n      const allowedExtensions = ['mp3', 'ogg'];\n      const fileExtension = (_b = (_a = this.filesToUpload[0]) === null || _a === void 0 ? void 0 : _a.name.split('.').pop()) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n      return fileExtension !== undefined && allowedExtensions.includes(fileExtension);\n    }\n\n    fileChangeEvent(file) {\n      this.filesToUpload = file.target.files;\n    }\n\n    makeFileRequest(url, params, files) {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        const xhr = new XMLHttpRequest();\n\n        for (let i = 0; i < files.length; i++) {\n          formData.append('file', files[i], files[i].name);\n        }\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n              resolve(JSON.parse(xhr.responseText));\n            } else {\n              reject(xhr.response);\n            }\n          }\n        };\n\n        xhr.open('POST', url, true);\n        xhr.setRequestHeader('Authorization', this.token);\n        xhr.send(formData);\n      });\n    }\n\n    onSubmit() {\n      var _a, _b, _c;\n\n      const name = (_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['name'].value;\n      const number = (_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['number'].value;\n      const duration = (_c = this.myForm) === null || _c === void 0 ? void 0 : _c.controls['duration'].value;\n      const song = new Song(number, name, duration, null, this.idAlbum);\n      const isAudio = this.isAudioFile();\n      let show = false;\n      this.songSvc.addSong(this.token, song).subscribe({\n        next: resp => {\n          if (this.filesToUpload != null && isAudio) {\n            this.makeFileRequest(environment.apiUrl + '/song/file/' + resp.song._id, [], this.filesToUpload).then(() => {\n              show = true;\n            });\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Ooops...',\n              text: 'Extension not valid, the song has beed added without file'\n            });\n            this.router.navigate(['see-album', this.idAlbum]);\n          }\n\n          if (show) {\n            Swal.fire({\n              icon: 'success',\n              title: 'Updated!',\n              text: 'Song added successfully'\n            });\n            this.router.navigate(['see-album', this.idAlbum]);\n          }\n        },\n\n        error(err) {\n          Swal.fire({\n            icon: 'error',\n            title: 'Ooops...',\n            text: 'It seems there was an error'\n          });\n        }\n\n      });\n    }\n\n  }\n\n  AddSongComponent.ɵfac = function AddSongComponent_Factory(t) {\n    return new (t || AddSongComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AlbumsService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i5.SongService));\n  };\n\n  AddSongComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddSongComponent,\n    selectors: [[\"app-add-song\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-7\"], [1, \"col-md-12\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"duration\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"number\", \"formControlName\", \"number\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\"], [\"type\", \"file\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"Send\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"col-md-5\"], [\"src\", \"../../../assets/track.png\", 1, \"img-fluid\"], [1, \"form-text\", \"text-danger\"]],\n    template: function AddSongComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddSongComponent_div_0_Template, 28, 6, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.album && ctx.charged);\n      }\n    },\n    dependencies: [i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"h1[_ngcontent-%COMP%]{margin-bottom:1.5em}img[_ngcontent-%COMP%]{margin-top:3.5em}\"]\n  });\n  return AddSongComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}