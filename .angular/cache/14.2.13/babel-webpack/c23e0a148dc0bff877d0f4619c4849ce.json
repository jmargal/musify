{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { Album } from '../../models/album';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/albums.service\";\nimport * as i3 from \"../../services/artist.service\";\nimport * as i4 from \"../../services/user.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction EditAlbumComponent_div_0_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"The title is not valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditAlbumComponent_div_0_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"The description is not valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditAlbumComponent_div_0_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const anno_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", anno_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", anno_r7, \" \");\n  }\n}\n\nfunction EditAlbumComponent_div_0_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Introduce an existing artist \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditAlbumComponent_div_0_img_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r5.url + \"/album/image/\" + ctx_r5.album.image, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EditAlbumComponent_div_0_img_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r6.url + \"/album/image/L5XAMzeZJd28RisrgVA5J4MV.jpg\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EditAlbumComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function EditAlbumComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"p\")(6, \"label\");\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 4);\n    i0.ɵɵtemplate(9, EditAlbumComponent_div_0_span_9_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\")(11, \"label\");\n    i0.ɵɵtext(12, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"textarea\", 6);\n    i0.ɵɵtemplate(14, EditAlbumComponent_div_0_span_14_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\")(16, \"label\");\n    i0.ɵɵtext(17, \"Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"select\", 7);\n    i0.ɵɵlistener(\"change\", function EditAlbumComponent_div_0_Template_select_change_18_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.entradaYear($event));\n    });\n    i0.ɵɵtemplate(19, EditAlbumComponent_div_0_option_19_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"p\")(21, \"label\");\n    i0.ɵɵtext(22, \"Artist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 9);\n    i0.ɵɵtemplate(24, EditAlbumComponent_div_0_span_24_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"p\", 10)(26, \"label\");\n    i0.ɵɵtext(27, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 11);\n    i0.ɵɵlistener(\"change\", function EditAlbumComponent_div_0_Template_input_change_28_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.fileChangeEvent($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(29, \"input\", 12);\n    i0.ɵɵelementStart(30, \"a\")(31, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function EditAlbumComponent_div_0_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.goBack());\n    });\n    i0.ɵɵtext(32, \"Go back\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"div\", 14);\n    i0.ɵɵtemplate(34, EditAlbumComponent_div_0_img_34_Template, 1, 1, \"img\", 15);\n    i0.ɵɵtemplate(35, EditAlbumComponent_div_0_img_35_Template, 1, 1, \"img\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.myForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isValidName());\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.validDescription());\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.album.year);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.annos.reverse());\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.nameArtist);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isArtistValid());\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.myForm.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.album.image != \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.album.image == \"\");\n  }\n}\n\nexport let EditAlbumComponent = /*#__PURE__*/(() => {\n  class EditAlbumComponent {\n    constructor(route, svc, artistSvc, userSvc, formbuilder, router) {\n      this.route = route;\n      this.svc = svc;\n      this.artistSvc = artistSvc;\n      this.userSvc = userSvc;\n      this.formbuilder = formbuilder;\n      this.router = router;\n      this.title = 'Edit \"';\n      this.id = this.route.snapshot.params['id'];\n      this.actualYear = new Date().getFullYear();\n      this.annos = [];\n      this.artistNames = [];\n      this.url = environment.apiUrl;\n    }\n\n    ngOnInit() {\n      this.getData();\n    }\n\n    getData() {\n      this.token = this.userSvc.getToken();\n      this.svc.getAlbum(this.token, this.id).subscribe({\n        next: album => {\n          this.album = album;\n          this.title += this.album.title + '\"';\n          this.artistSvc.getArtist(this.token, this.album.artist._id).subscribe({\n            next: artist => {\n              this.actualArtist = artist;\n              this.nameArtist = this.actualArtist.artist.name;\n            },\n\n            error(err) {\n              console.log(err);\n            }\n\n          });\n        },\n\n        error(err) {\n          console.log(err);\n        }\n\n      });\n      this.artistSvc.getArtists(this.token, 1, 99).subscribe({\n        next: value => {\n          const artistNames = value.artists.map(artist => artist.name);\n          this.artistNames = artistNames;\n        },\n\n        error(err) {\n          console.log(err);\n        }\n\n      });\n\n      for (let anno = 1900; anno <= this.actualYear; anno++) {\n        this.annos.push(anno);\n      }\n\n      this.myForm = this.formbuilder.group({\n        title: ['', [Validators.required, Validators.minLength(3)]],\n        description: ['', [Validators.required, Validators.minLength(3)]],\n        year: ['', Validators.required],\n        artist: [this.nameArtist, [Validators.required]],\n        image: [null]\n      });\n    }\n\n    entradaYear(event) {\n      const selectedYear = event.target.value;\n      this.myForm.get('year').setValue(selectedYear);\n    }\n\n    isArtistValid() {\n      var _a, _b;\n\n      const artistControl = this.myForm.get('artist').value;\n      let artistExists = false;\n\n      if (this.artistNames.includes(artistControl)) {\n        artistExists = true;\n      } else {\n        (_a = this.myForm) === null || _a === void 0 ? void 0 : _a.setErrors({\n          'error': true\n        });\n      }\n\n      return ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['artist'].touched) && !artistExists;\n    }\n\n    isValidName() {\n      var _a, _b;\n\n      return ((_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['title'].touched) && ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['title'].errors);\n    }\n\n    validDescription() {\n      var _a, _b;\n\n      return ((_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['description'].touched) && ((_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['description'].errors);\n    }\n\n    isImageFile(file) {\n      var _a;\n\n      const allowedExtensions = ['jpg', 'jpeg', 'png', 'webp'];\n      const fileExtension = (_a = file === null || file === void 0 ? void 0 : file.name.split('.').pop()) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n      return fileExtension !== undefined && allowedExtensions.includes(fileExtension);\n    }\n\n    fileChangeEvent(file) {\n      this.filesToUpload = file.target.files;\n    }\n\n    makeFileRequest(url, params, files) {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        const xhr = new XMLHttpRequest();\n\n        for (let i = 0; i < files.length; i++) {\n          formData.append('image', files[i], files[i].name);\n        }\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n              resolve(JSON.parse(xhr.responseText));\n            } else {\n              reject(xhr.response);\n            }\n          }\n        };\n\n        xhr.open('POST', url, true);\n        xhr.setRequestHeader('Authorization', this.token);\n        xhr.send(formData);\n      });\n    }\n\n    getFields() {\n      var _a, _b, _c, _d;\n\n      let title = (_a = this.myForm) === null || _a === void 0 ? void 0 : _a.controls['title'].value;\n      let description = (_b = this.myForm) === null || _b === void 0 ? void 0 : _b.controls['description'].value;\n      let year = (_c = this.myForm) === null || _c === void 0 ? void 0 : _c.controls['year'].value;\n      let artist = (_d = this.myForm) === null || _d === void 0 ? void 0 : _d.controls['artist'].value;\n      this.artistSvc.getArtistByName(this.token, artist).subscribe({\n        next: value => {\n          this.artistId = value.artist._id;\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n      let img = this.image;\n\n      if (img && !this.isImageFile(img)) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Invalid Image',\n          text: 'Please select a valid image file.'\n        });\n      }\n\n      const album = new Album(title, description, year, img, this.artistId);\n      return album;\n    }\n\n    onSubmit() {\n      const album = this.getFields();\n      this.svc.editdAlbum(this.token, this.id, album).subscribe({\n        next: () => {\n          if (this.filesToUpload != null) {\n            this.makeFileRequest(environment.apiUrl + '/album/image/' + this.album._id, [], this.filesToUpload).then(result => {\n              this.album.image = result.image;\n            });\n          }\n\n          Swal.fire({\n            icon: 'success',\n            title: 'Updated!',\n            text: 'Artist updated successfully'\n          });\n          this.router.navigate(['list/1']);\n        },\n        error: err => {\n          console.log(err);\n          Swal.fire({\n            icon: 'error',\n            title: 'Ooops...',\n            text: 'It seems there was an error'\n          });\n        }\n      });\n    }\n\n    goBack() {\n      this.router.navigate([`see-album/${this.id}`]);\n    }\n\n  }\n\n  EditAlbumComponent.ɵfac = function EditAlbumComponent_Factory(t) {\n    return new (t || EditAlbumComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AlbumsService), i0.ɵɵdirectiveInject(i3.ArtistService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  EditAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditAlbumComponent,\n    selectors: [[\"app-edit-album\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"formControlName\", \"description\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [\"aria-label\", \".form-select-lg example\", \"formControlName\", \"year\", \"required\", \"\", 1, \"form-select\", \"form-select-lg\", \"mb-3\", 2, \"width\", \"150px\", 3, \"ngModel\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"artist\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [1, \"form-group\"], [\"type\", \"file\", \"formControlName\", \"image\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", \"value\", \"Send\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"0.5em\", \"font-size\", \"large\", 3, \"click\"], [\"id\", \"albumImage\", 1, \"col-md-5\"], [3, \"src\", 4, \"ngIf\"], [1, \"form-text\", \"text-danger\"], [3, \"value\"], [3, \"src\"]],\n    template: function EditAlbumComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EditAlbumComponent_div_0_Template, 36, 13, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.album && ctx.actualArtist);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"#albumImage[_ngcontent-%COMP%]{margin:1.5em}img[_ngcontent-%COMP%]{width:550px;height:450px;border-radius:40px}p[_ngcontent-%COMP%]{font-size:large}\"]\n  });\n  return EditAlbumComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}